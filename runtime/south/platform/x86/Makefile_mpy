CC = gcc
PROJECT_NAME = calvin_c

#define the location where the micropython library is located (relative to here)
MP_LIB_DIR = libmpy

CFLAGS += -g -Wall
CFLAGS += -Werror
CFLAGS += --std=gnu99
ifneq ($(PLATFORM), Darwin)
CFLAGS += -lrt
endif
CFLAGS += -DCC_GETOPT_ENABLED
CFLAGS += -DCC_TRANSPORT_SOCKET -DCC_TRANSPORT_SOCKET_SSDP_ENABLED
CFLAGS += -DCC_STORAGE_ENABLED -DCC_DEEPSLEEP_ENABLED -DCC_INACTIVITY_TIMEOUT=1 -DCC_SLEEP_TIME=60 -DCC_RUNTIME_STATE_BUFFER_SIZE=10000
CFLAGS += -Llibmpy -lmicropython -lm -Ilibmpy/build -Imicropython -Ilibmpy -DCC_PYTHON_ENABLED -DCC_PYTHON_HEAP_SIZE=20*1024
EXT_SRC_C = $(addprefix libmpy/, cc_mpy_port.c cc_mpy_calvinsys.c)

C_SOURCE_FILES += \
runtime/south/platform/x86/cc_platform_x86.c \
cc_api.c \
main.c \
runtime/north/cc_common.c \
runtime/north/scheduler/np_scheduler/cc_scheduler.c \
runtime/north/cc_node.c \
runtime/north/cc_proto.c \
runtime/north/cc_transport.c \
runtime/south/transport/socket/cc_transport_socket.c \
runtime/north/cc_tunnel.c \
runtime/north/cc_link.c \
runtime/north/cc_actor_store.c \
runtime/north/cc_actor.c \
runtime/north/cc_port.c \
runtime/north/cc_fifo.c \
runtime/north/cc_token.c \
calvinsys/cc_calvinsys.c \
calvinsys/common/cc_calvinsys_timer.c \
runtime/north/cc_msgpack_helper.c \
msgpuck/msgpuck.c \
actors/cc_actor_mpy.c \
$(EXT_SRC_C)

c_calvin: mpy-cross -lmicropython $(C_SOURCE_FILES)
	@sed -i -e 's/mp_decode_uint/mpk_decode_uint/' msgpuck/msgpuck.h
	@$(CC) -o $(PROJECT_NAME) $(C_SOURCE_FILES) $(CFLAGS)

mpy-cross:
	@echo "Building the MicroPython cross compiler"
	$(MAKE) -C micropython/mpy-cross

-lmicropython:
	$(MAKE) lib -C $(MP_LIB_DIR)

clean:
	$(MAKE) clean -C $(MP_LIB_DIR)
	rm -f $(PROJECT_NAME)
